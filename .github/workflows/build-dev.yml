name: Ivugurura Client CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the develop branch
  push:
    branches:
      - develop

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.17.0]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
      - name: Populate .env file
        run: |
          touch .env
          echo REACT_APP_API_URL=https://dev.reformationvoice.org >> .env
          echo REACT_APP_SOCKET_URL=https://dev.reformationvoice.org >> .env
          echo GENERATE_SOURCEMAP=true >> .env
          echo INLINE_RUNTIME_CHUNK=true >> .env
          echo SKIP_PREFLIGHT_CHECK=true >> .env
          echo HTTPS=true >> .env
      - name: Install packages and run build the app
        run: |
          yarn
          yarn build
          tar zcvf build-staging.tar.gz build/
      - uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: 'build-staging.tar.gz'
          target: '${{ secrets.PROJECT_ROOT_DIR }}'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
      - name: Prepare SSH keys and deploy the app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.PROJECT_ROOT_DIR }}
            git reset --hard
            git checkout develop
            echo "Unzip the build"
            tar zxvf build-staging.tar.gz
            echo "Restart the server"
            pm2 restart 1
            echo "Done"
